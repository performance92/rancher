name: build-docker-images
on: 
  push:
    branches:
      - "master"
      - "release/v*"
    tags:
      - "v*"
env:
  TAG: ${{ github.ref_name }}
  HEAD_TAG: ${{ github.ref_name }}
  COMMIT: ${{ github.sha }}
  REPOSITORY_OWNER: ${{ github.repository_owner }}
  IMAGE: ${{ github.repository_owner }}/rancher
  IMAGE_AGENT: ${{ github.repository_owner }}/rancher-agent
  CATTLE_KDM_BRANCH: dev-v2.8
jobs:
  build-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Environment Variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> "$GITHUB_ENV"

          echo "RKE_VERSION=$(grep -m1 'github.com/rancher/rke' go.mod | awk '{print $2}')" >> "$GITHUB_ENV"

          ref_name="${{ github.ref_name }}"
          prefix="release/"
          if [[ "$ref_name" == release/v* ]]; then
            TAG=${ref_name#$prefix}-${{ github.sha }}-head
            HEAD_TAG=${ref_name#$prefix}-head
            echo "TAG=$TAG" >> "$GITHUB_ENV"
            echo "HEAD_TAG=$HEAD_TAG" >> "$GITHUB_ENV"
          fi
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          flavor: |
            latest=false
      - name: Docker Registry Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create k3s images file
        run: touch k3s-airgap-images.tar
      - name: Download data.json
        run: curl -sLf https://releases.rancher.com/kontainer-driver-metadata/${{ env.CATTLE_KDM_BRANCH }}/data.json > ./data.json
      - name: Build and export server
        id: build
        uses: docker/build-push-action@v5
        with:
          push: true
          build-args: |
            "VERSION=${{ env.COMMIT }}"
            "COMMIT=${{ env.COMMIT }}"
            "RKE_VERSION=${{ env.RKE_VERSION }}"
            "ARCH=${{ matrix.arch }}"
          tags: ${{ env.IMAGE }}:${{ env.TAG }}-${{ matrix.arch }}
          context: .
          platforms: "${{ matrix.os }}/${{ matrix.arch }}"
          file: ./package/Dockerfile
          labels: "${{ steps.meta.outputs.labels }}"
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: "digests-server-${{ matrix.os }}-${{ matrix.arch }}"
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 7
          overwrite: true
  merge-server-manifest:
    runs-on: ubuntu-latest
    needs: [build-server]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Setup Environment variables
        run: |
          ref_name="${{ github.ref_name }}"
          prefix="release/"
          if [[ "$ref_name" == release/v* ]]; then
            TAG=${ref_name#$prefix}-${{ github.sha }}-head
            HEAD_TAG=${ref_name#$prefix}-head
            echo "TAG=$TAG" >> "$GITHUB_ENV"
            echo "HEAD_TAG=$HEAD_TAG" >> "$GITHUB_ENV"
          fi
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-server*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          flavor: |
            latest=false
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          TAGS="-t ${{ env.IMAGE }}:${{ env.TAG }}"
          if [[ "${{ github.ref_name }}" == release/v* ]]; then
            TAGS="$TAGS -t ${{ env.IMAGE }}:${{ env.HEAD_TAG }}"
          fi
          docker buildx imagetools create "$TAGS" $(printf '${{ env.IMAGE }}@sha256:%s ' *)
      - name: Create head manifest list and push
        run: |
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE }}:${{ env.TAG }}
  build-agent:
    needs: [merge-server-manifest]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Environment Variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> "$GITHUB_ENV"

          ref_name="${{ github.ref_name }}"
          prefix="release/"
          if [[ "$ref_name" == release/v* ]]; then
            TAG=${ref_name#$prefix}-${{ github.sha }}-head
            echo "TAG=$TAG" >> "$GITHUB_ENV"
          fi
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          flavor: |
            latest=false
      - name: Docker Registry Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and export agent
        id: build
        uses: docker/build-push-action@v5
        with:
          push: true
          build-args: |
            "VERSION=${{ env.COMMIT }}"
            "ARCH=${{ matrix.arch }}"
            "RANCHER_TAG=${{ env.TAG }}"
            "RANCHER_REPO=${{ env.REPOSITORY_OWNER }}"
          tags: ${{ env.IMAGE_AGENT }}:${{ env.TAG }}-${{ matrix.arch }}
          context: .
          platforms: "${{ matrix.os }}/${{ matrix.arch }}"
          file: ./package/Dockerfile.agent
          labels: "${{ steps.meta.outputs.labels }}"
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: "digests-agent-${{ matrix.os }}-${{ matrix.arch }}"
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 7
          overwrite: true
  merge-agent-manifest:
    runs-on: ubuntu-latest
    needs: [build-agent]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Setup Environment variables
        run: |
          ref_name="${{ github.ref_name }}"
          prefix="release/"
          if [[ "$ref_name" == release/v* ]]; then
            TAG=${ref_name#$prefix}-${{ github.sha }}-head
            echo "TAG=$TAG" >> "$GITHUB_ENV"
          fi
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-agent-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_AGENT }}
          flavor: |
            latest=false
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create -t ${{ env.IMAGE_AGENT }}:${{ env.TAG }} \
            $(printf '${{ env.IMAGE_AGENT }}@sha256:%s ' *)
      - name: Create head manifest list and push
        run: |
          TAGS="-t ${{ env.IMAGE_AGENT }}:${{ env.TAG }}"
          if [[ "${{ github.ref_name }}" == release/v* ]]; then
            TAGS="$TAGS -t ${{ env.IMAGE_AGENT }}:${{ env.HEAD_TAG }}"
          fi
          docker buildx imagetools create "$TAGS" $(printf '${{ env.IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_AGENT }}:${{ env.TAG }}
