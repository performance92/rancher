name: build-docker-images
on: 
  push:
    branches:
      - "master"
      - "release/v*"
    tags:
      - "v*"
env:
  TAG: ${{ github.ref_name }}
  COMMIT: ${{ github.sha }}
  REPOSITORY_OWNER: ${{ github.repository_owner }}
  IMAGE: ${{ github.repository_owner }}/rancher
  CATTLE_KDM_BRANCH: dev-v2.8
jobs:
  build-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Environment Variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> "$GITHUB_ENV"

          echo "RKE_VERSION=$(grep -m1 'github.com/rancher/rke' go.mod | awk '{print $2}')" >> "$GITHUB_ENV"

          ref_name="${{ github.ref_name }}"
          prefix="release/"
          if [[ "$ref_name" == release/v* ]]; then
            TAG=${ref_name#$prefix}-${{ github.sha }}-head-${{ env.ARCH }}
            echo "TAG=$TAG" >> "$GITHUB_ENV"
          fi
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          flavor: |
            latest=false
      - name: Docker Registry Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create k3s images file
        run: touch k3s-airgap-images.tar
      - name: Download data.json
        run: curl -sLf https://releases.rancher.com/kontainer-driver-metadata/${{ env.CATTLE_KDM_BRANCH }}/data.json > ./data.json
      - name: Build and export server
        id: build
        uses: docker/build-push-action@v5
        with:
          push: true
          build-args: |
            "VERSION=${{ env.COMMIT }}"
            "COMMIT=${{ env.COMMIT }}"
            "RKE_VERSION=${{ env.RKE_VERSION }}"
          tags: ${{ env.IMAGE }}:${{ env.TAG }}
          context: .
          platforms: "${{ matrix.os }}/${{ matrix.arch }}"
          file: ./package/Dockerfile
          labels: "${{ steps.meta.outputs.labels }}"
  merge-manifest:
    runs-on: ubuntu-latest
    needs: [build-server]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Setup Environment variables
        run: |
          ref_name="${{ github.ref_name }}"
          prefix="release/"
          if [[ "$ref_name" == release/v* ]]; then
            TAG=${ref_name#$prefix}-${{ github.sha }}-head
            echo "TAG=$TAG" >> "$GITHUB_ENV"
          fi
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create and Push manifest
        run: |
          docker manifest create ${{ env.IMAGE }}:${{ env.TAG }}-amd64 \
            --amend ${{ env.IMAGE }}:${{ env.TAG }}-arm64 \
            --amend ${{ env.IMAGE }}:${{ env.TAG }}-amd64

          docker manifest push ${{ env.IMAGE }}:${{ env.TAG }}
  # build-agent-amd64:
  #   needs: [build-server]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     # - name: "Read secrets"
  #     #   uses: rancher-eio/read-vault-secrets@main
  #     #   with:
  #     #     secrets: |
  #     #       secret/data/github/repo/${{ github.repository }}/dockerhub/${{ github.repository_owner }}/credentials username | DOCKER_USERNAME ;
  #     #       secret/data/github/repo/${{ github.repository }}/dockerhub/${{ github.repository_owner }}/credentials password | DOCKER_PASSWORD

  #     - name: Docker Registry Login
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Tag name
  #       run: |
  #         ref_name="${{ github.ref_name }}"
  #         prefix="release/"
  #         if [[ "$ref_name" == release/v* ]]; then
  #           TAG=${ref_name#$prefix}-${{ github.sha }}-head
  #           echo "TAG=$TAG" >> "$GITHUB_ENV"
  #         fi

  #     - name: Build and export server
  #       uses: docker/build-push-action@v5
  #       with:
  #         push: true
  #         build-args: |
  #           "VERSION=${{ env.COMMIT }}"
  #           "RANCHER_REPO=${{ env.REPOSITORY_OWNER }}"
  #         tags: ${{ env.REPOSITORY_OWNER }}/rancher-agent:${{ env.TAG }}
  #         context: .
  #         file: ./package/Dockerfile.agent
