#!/usr/bin/env bash

## This script builds the Rancher server image exclusively, sans Dapper

## Shell variables to set to override defaults:
## CHART_REPO=my-docker-id
## REPO=$CHART_REPO
## TAG=my-rancher-tag (v2.10.0-dev.1)
## TARGET_REPO=$REPO/rancher:$TAG
## ARCH=arm64 if on mac m1

set -eo pipefail
set -x
set -u

SCRIPT_DIR="$(cd "$(dirname "$0")"; pwd)"

COMMIT=$(git rev-parse --short HEAD)
TAG="${TAG:-$(yq '.env.TAG | sub("-.*", "")' < .github/workflows/pull-request.yml)-${COMMIT}}"
OS="${OS:-linux}"
ARCH="${ARCH:-amd64}"
CATTLE_K3S_VERSION=$(awk '/^ENV CATTLE_K3S_VERSION/ { print $3 }' package/Dockerfile)
CATTLE_KDM_BRANCH=$(awk -F= '/ARG CATTLE_KDM_BRANCH/ { print $2 }' package/Dockerfile)
RKE_VERSION=$(grep -m1 'github.com/rancher/rke' go.mod | awk '{print $2}')
if [[ -z "$RKE_VERSION" ]]; then
    RKE_VERSION=$(grep -m1 'github.com/rancher/rke' go.mod | awk '{print $4}')
fi
CATTLE_RANCHER_WEBHOOK_VERSION=$(yq '.webhookVersion' < build.yaml)
CATTLE_CSP_ADAPTER_MIN_VERSION=$(yq '.cspAdapterMinVersion' < build.yaml)
CATTLE_FLEET_VERSION=$(yq '.fleetVersion' < build.yaml)

# download airgap images and export it to a tarball
if [ ! -s ./k3s-images.txt ]; then
  curl -Lf https://github.com/rancher/k3s/releases/download/${CATTLE_K3S_VERSION}/k3s-images.txt -o ./k3s-images.txt
fi
if [ ! -s ./k3s-airgap-images.tar ]; then
  AIRGAP_IMAGES=$(grep -e 'docker.io/rancher/mirrored-pause' -e 'docker.io/rancher/mirrored-coredns-coredns' ./k3s-images.txt)
  xargs -n1 docker pull <<< "${AIRGAP_IMAGES}"
  xargs -n2 docker save -o ./k3s-airgap-images.tar <<< "${AIRGAP_IMAGES}"
fi


# download kontainer driver metadata
if [ ! -s ./data.json ]; then
  curl -sLf https://releases.rancher.com/kontainer-driver-metadata/${CATTLE_KDM_BRANCH}/data.json > ./data.json
fi

STAY=true
for file in k3s-images.txt k3s-airgap-images.tar data.json ; do
    if [ ! -s $file ] ; then
        if [ ! -e $file ] ; then
            echo "Failed to create file $file"
            STAY=false
        else
            echo "Created file $file but it's empty"
            STAY=false
        fi
    fi
done
if [[ $STAY == false ]] ; then
       exit 2
fi
for file in k3s-airgap-images.tar data.json ; do
    diff -q $file package/$file || cp $file package/$file
done

IMAGE_REPO=${REPO:-rancher}

TARGET_ARCH=$MAIN_ARCH IMAGE_REPO=$REPO ./dev-scripts/build-local.sh

DEBUG="" TARGETOS=$OS AGENT_ARCH=$AGENT_ARCH ./dev-scripts/build-agent

cp bin/agent package/

PACKAGE_FOLDER="${SCRIPT_DIR}/../package/"

docker buildx build \
  --build-arg ARCH=${AGENT_ARCH} \
  --build-arg CATTLE_RANCHER_WEBHOOK_VERSION=${CATTLE_RANCHER_WEBHOOK_VERSION} \
  --build-arg IMAGE_REPO=${IMAGE_REPO} \
  --build-arg RANCHER_REPO=$CHART_REPO \
  --build-arg RANCHER_TAG=${TAG} \
  --build-arg RKE_VERSION=${RKE_VERSION} \
  --build-arg VERSION="${TAG}" \
  --tag $IMAGE_REPO/rancher-agent:${TAG} \
  --platform="${OS}/${MAIN_ARCH}" \
  --file ./dev-scripts/Dockerfile.agent \
  "$PACKAGE_FOLDER"

echo "Ready to run:\ndocker push $IMAGE_REPO/rancher:${TAG} && docker push $IMAGE_REPO/rancher-agent:${TAG}"

docker push $IMAGE_REPO/rancher:${TAG} && docker push $IMAGE_REPO/rancher-agent:${TAG}
